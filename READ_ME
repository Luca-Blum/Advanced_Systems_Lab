COMPILE baum-welch.c
gcc $flag -o run baum-welch-stable.c io.c bw-tested.c tested.h -lm
// -lm is used for the sqrt function

./run $seed $hiddenState $differentObservable $T

or run the bash function with many different parameters (you can change them easily): 
bash suite.sh

pipe the output into "model_output.txt"
bash suite.sh > model_output.txt

to create plot run:
python3 plotting.py
it stores a plot with the current time as name in the same directory.


USAGE baum-welch.r

- open with RStudio
- Go the session -> Set Working Directory -> to source file location
- load package 'HMM' 
- comment out PI update in baum-welch-stable.c to get same result 
- also comment out PI update in bw-tested.c to make sure we don't get an error
- make sure you write initial matrices to init folder (use write_init(...))
- make sure you write result matrices to result folder (use write_result(...))



ADDITIONAL DOCUMENTS

Overleaf collection of files: https://www.overleaf.com/2741931356ngjpcjmswxff

	main.tex		overview of baum-welch algorithm and possible optimizations
	slides.tex		slides for meeting with supervisors
	flops.tex		cost analysis of stable and default baum-welch algorithm
	memory_accesses.tex	mememory access analysis for stable baum-welch algorithm
